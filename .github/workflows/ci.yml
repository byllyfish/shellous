# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ci

on:
  push:
    branches: [ "*" ]
  schedule:
    # Every day at 2:02.
    - cron: '2 2 * * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20  # stop runaway job after 20 minutes
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-11, windows-latest, ubuntu-18.04 ]
        python-version: [ '3.9', '3.10', '3.11-dev' ]

    env:
      SHELLOUS_DEBUG: 1
      BUILD_NAME: build (${{ matrix.os }},${{ matrix.python-version }})

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip3 install -U setuptools wheel
        pip3 install -r ./ci/requirements-dev.txt
        if [ "${{ matrix.os }}" != "windows-latest" -a "${{ matrix.python-version }}" != "3.11-dev" ]; then
            pip3 install uvloop
        fi
    - name: Lint
      if: matrix.python-version != '3.11-dev'
      run: |
        # Run flake8 and pylint.
        # stop the build if there are Python syntax errors or undefined names
        echo "flake8 preflight:" `flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics`
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        echo "flake8 syntax check:" `flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics`
        pylint -v --fail-under 9.5 shellous
        # Run pylint on tests directory with some checks disabled.
        pylint --disable=C0116,C0103,R0903,W0212,C0302,C0415 --fail-under 9.5 tests
        if ! mypy shellous tests; then
          echo "::warning title=Lint Warning::mypy found issues in $BUILD_NAME"
        fi
    - name: Run Tests
      run: |
        if ! pytest -vv -s --durations=20 --log-cli-level=DEBUG | ./ci/annotate.awk -v step=Run_Tests; then
          echo "::warning title=Run Tests Warning::Re-running failed tests in $BUILD_NAME"
          pytest -vv -s --durations=20 --log-cli-level=DEBUG --last-failed
        fi
    - name: Run Code Coverage (Linux and MacOS)
      if: (matrix.os == 'ubuntu-latest' || matrix.os == 'macos-11') && matrix.python-version != '3.11-dev'
      run: |
        # Run coverage and upload report to codecov.
        coverage run --source shellous -m pytest
        # Re-run with coverage for shellous/watcher.py
        SHELLOUS_CHILDWATCHER_TYPE=default coverage run --source shellous -m pytest
        codecov
      env:
        SHELLOUS_CODE_COVERAGE: 1
    - name: Run Tests with uvloop (Linux and MacOS)
      if: (matrix.os == 'ubuntu-latest' || matrix.os == 'macos-11') && matrix.python-version != '3.11-dev'
      run: |
        if ! pytest -vv -s --log-cli-level=DEBUG; then
          echo "::warning title=uvloop Warning::Re-running failed tests in $BUILD_NAME"
          pytest -vv -s --log-cli-level=DEBUG --last-failed
        fi
      env:
        SHELLOUS_LOOP_TYPE: "uvloop"
    - name: Run Tests with PidfdWatcher (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        if ! pytest -vv -s --log-cli-level=DEBUG; then
          echo "::warning title=PidfdChildWatcher Warning::Re-running failed tests in $BUILD_NAME"
          pytest -vv -s --log-cli-level=DEBUG --last-failed
        fi
      env:
        SHELLOUS_CHILDWATCHER_TYPE: "pidfd"
    - name: Run Tests with SafeChildWatcher (Linux and MacOS)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-11'
      run: |
        if ! pytest -vv -s --log-cli-level=DEBUG; then
          echo "::warning title=SafeChildWatcher Warning::Re-running failed tests in $BUILD_NAME"
          pytest -vv -s --log-cli-level=DEBUG --last-failed
        fi
      env:
        SHELLOUS_CHILDWATCHER_TYPE: "safe"
    - name: Run Tests with MultiLoopChildWatcher (Linux and MacOS)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-11'
      run: |
        if ! pytest -vv -s --log-cli-level=DEBUG; then
          echo "::warning title=MultiLoopChildWatcher Warning::Re-running failed tests in $BUILD_NAME"
          pytest -vv -s --log-cli-level=DEBUG --last-failed
        fi
      env:
        SHELLOUS_CHILDWATCHER_TYPE: "multi"
    - name: Run Tests with DefaultChildWatcher (Linux and MacOS)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-11' || matrix.os == 'ubuntu-18.04'
      run: |
        if ! pytest -vv -s --log-cli-level=DEBUG | ./ci/annotate.awk -v step=DefaultChildWatcher; then
          echo "::warning title=DefaultChildWatcher Warning::Re-running failed tests in $BUILD_NAME"
          pytest -vv -s --log-cli-level=DEBUG --last-failed
        fi
      env:
        SHELLOUS_CHILDWATCHER_TYPE: "default"

  build-alpine:
    runs-on: ubuntu-latest
    timeout-minutes: 20  # stop runaway job after 20 minutes
    container:
      image: python:3.10.1-alpine
    env:
      SHELLOUS_DEBUG: 1
      BUILD_NAME: build (alpine)

    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          apk add --update gcc musl-dev python3-dev 
          pip3 install -r ./ci/requirements-dev.txt
      - name: Run Tests
        run: |
          if ! pytest -v -s --log-cli-level=DEBUG; then
            echo "::warning title=Run Tests Warning::Re-running failed tests in $BUILD_NAME"
            pytest -v -s --log-cli-level=DEBUG --last-failed
          fi
      - name: Run Tests with DefaultChildWatcher
        run: |
          if ! pytest -v -s --log-cli-level=DEBUG; then
            echo "::warning title=DefaultChildWatcher Warning::Re-running failed tests in $BUILD_NAME"
            pytest -v -s --log-cli-level=DEBUG --last-failed
          fi
        env:
          SHELLOUS_CHILDWATCHER_TYPE: "default"


  build-pypy:
    runs-on: ubuntu-latest
    timeout-minutes: 20  # stop runaway job after 20 minutes
    python-version: 'pypy-3.9'

    env:
      SHELLOUS_DEBUG: 1
      BUILD_NAME: build (pypy-3.9)

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - name: Install dependencies
      run: |
        pip3 install -U setuptools wheel
        pip3 install -r ./ci/requirements-dev.txt
    - name: Run Tests
      run: |
        pytest -vv -s --durations=20 --log-cli-level=DEBUG
